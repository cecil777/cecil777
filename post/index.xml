<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on cc&#39;blog</title>
    <link>https://cecil777.github.io/post/</link>
    <description>Recent content in Posts on cc&#39;blog</description>
    <image>
      <url>https://cecil777.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://cecil777.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 08 Mar 2022 16:29:10 +0800</lastBuildDate><atom:link href="https://cecil777.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>easy-api 理解</title>
      <link>https://cecil777.github.io/post/easy-api-first/</link>
      <pubDate>Tue, 08 Mar 2022 16:29:10 +0800</pubDate>
      
      <guid>https://cecil777.github.io/post/easy-api-first/</guid>
      <description>main理解 os.Getwd 获取执行文件所在目录
pathsvc.NewIOPath 这边的定义是在主文件夹下创建一个contract文件夹用来存放定义的接口。这个接口可以定义方法，任何实现这两个方法的类型，都可以认为它实现了接口。
package contract  type IIOPath interface { 	GetRoot() string 	Join(path ...string) string } IIOPath定义了两个方法GetRoot(),Join(path &amp;hellip;string)
package pathsvc  import ( 	&amp;#34;easyApi/contract&amp;#34; 	&amp;#34;path/filepath&amp;#34; )  type ioPath struct { 	root string }  func (p ioPath) GetRoot() string { 	return p.root }  func (p ioPath) Join(paths ...string) string { 	var res string 	for _, path := range paths { 	if res == &amp;#34;&amp;#34; { 	res = res + path 	break 	} 	if path == &amp;#34;.</description>
    </item>
    
  </channel>
</rss>
